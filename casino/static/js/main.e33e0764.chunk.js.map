{"version":3,"sources":["store/SVG-cards-1.3 sync nonrecursive //.svg$","store/SVG-cards-1.3/10_of_clubs.svg","store/SVG-cards-1.3/10_of_diamonds.svg","store/SVG-cards-1.3/10_of_hearts.svg","store/SVG-cards-1.3/10_of_spades.svg","store/SVG-cards-1.3/2_of_clubs.svg","store/SVG-cards-1.3/2_of_diamonds.svg","store/SVG-cards-1.3/2_of_hearts.svg","store/SVG-cards-1.3/2_of_spades.svg","store/SVG-cards-1.3/3_of_clubs.svg","store/SVG-cards-1.3/3_of_diamonds.svg","store/SVG-cards-1.3/3_of_hearts.svg","store/SVG-cards-1.3/3_of_spades.svg","store/SVG-cards-1.3/4_of_clubs.svg","store/SVG-cards-1.3/4_of_diamonds.svg","store/SVG-cards-1.3/4_of_hearts.svg","store/SVG-cards-1.3/4_of_spades.svg","store/SVG-cards-1.3/5_of_clubs.svg","store/SVG-cards-1.3/5_of_diamonds.svg","store/SVG-cards-1.3/5_of_hearts.svg","store/SVG-cards-1.3/5_of_spades.svg","store/SVG-cards-1.3/6_of_clubs.svg","store/SVG-cards-1.3/6_of_diamonds.svg","store/SVG-cards-1.3/6_of_hearts.svg","store/SVG-cards-1.3/6_of_spades.svg","store/SVG-cards-1.3/7_of_clubs.svg","store/SVG-cards-1.3/7_of_diamonds.svg","store/SVG-cards-1.3/7_of_hearts.svg","store/SVG-cards-1.3/7_of_spades.svg","store/SVG-cards-1.3/8_of_clubs.svg","store/SVG-cards-1.3/8_of_diamonds.svg","store/SVG-cards-1.3/8_of_hearts.svg","store/SVG-cards-1.3/8_of_spades.svg","store/SVG-cards-1.3/9_of_clubs.svg","store/SVG-cards-1.3/9_of_diamonds.svg","store/SVG-cards-1.3/9_of_hearts.svg","store/SVG-cards-1.3/9_of_spades.svg","store/SVG-cards-1.3/ace_of_clubs.svg","store/SVG-cards-1.3/ace_of_diamonds.svg","store/SVG-cards-1.3/ace_of_hearts.svg","store/SVG-cards-1.3/ace_of_spades.svg","store/SVG-cards-1.3/jack_of_clubs.svg","store/SVG-cards-1.3/jack_of_diamonds.svg","store/SVG-cards-1.3/jack_of_hearts.svg","store/SVG-cards-1.3/jack_of_spades.svg","store/SVG-cards-1.3/king_of_clubs.svg","store/SVG-cards-1.3/king_of_diamonds.svg","store/SVG-cards-1.3/king_of_hearts.svg","store/SVG-cards-1.3/king_of_spades.svg","store/SVG-cards-1.3/queen_of_clubs.svg","store/SVG-cards-1.3/queen_of_diamonds.svg","store/SVG-cards-1.3/queen_of_hearts.svg","store/SVG-cards-1.3/queen_of_spades.svg","components/blackJack/Cards/FaceDown sync nonrecursive //.jpg$","components/blackJack/Cards/FaceDown/faceDownCard.jpg","components/blackJack/Cards/Chips sync nonrecursive //.png$","components/blackJack/Cards/Chips/1.png","components/blackJack/Cards/Chips/10.png","components/blackJack/Cards/Chips/100.png","components/blackJack/Cards/Chips/1000.png","components/blackJack/Cards/Chips/10000.png","components/blackJack/Cards/Chips/5.png","components/blackJack/Cards/Chips/50.png","components/blackJack/Cards/Chips/500.png","hooks/useDarkMode.jsx","components/TopNavigation.tsx","components/Slots.tsx","components/blackJack/Components/Presentational/GameRules.tsx","store/Constants/ActionTypes.ts","store/Constants/calculateScore.ts","store/Reducers/herlperFunctions.ts","components/blackJack/Components/Presentational/Score.tsx","components/blackJack/Components/Presentational/Cards.tsx","components/blackJack/Components/DealerCards.tsx","store/Actions/DealerMove.ts","store/Actions/EndGame.ts","components/blackJack/Components/PlayerCards.tsx","components/blackJack/Components/Presentational/Pot.tsx","components/blackJack/Components/Presentational/EndGameResult.tsx","components/blackJack/Components/Table.tsx","store/Actions/CancelBet.ts","components/blackJack/Components/Presentational/Button.tsx","components/blackJack/Components/ButtonsContainer.tsx","store/Actions/Deal.ts","store/Actions/Hit.ts","store/Actions/Stand.ts","store/Actions/Double.ts","components/blackJack/Components/Presentational/Chips.tsx","components/blackJack/Components/ChipsContainer.tsx","store/Actions/PlaceBet.ts","components/blackJack/BlackJack.tsx","components/ContentContainer.tsx","components/NavBar.tsx","App.tsx","serviceWorker.ts","store/Constants/cardObjects.ts","store/Reducers/endgameFunctions.ts","store/Reducers/RootReducer.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useDarkMode","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","enabled","setEnabled","isEnabled","enabledState","useEffect","className","bodyClass","document","body","classList","add","remove","TopNavigation","connect","state","currentMoney","ThemeIcon","darkTheme","setDarkTheme","onClick","size","BellIcon","UserCircle","Slots","spin","setSpin","ring1","setRing1","ring2","setRing2","ring3","setRing3","price","setPrice","input","setInput","realBet","setRealBet","jackpot","setJackpot","balance","setBalance","play","setTimeout","Math","floor","random","undefined","style","color","type","onChange","target","match","parseInt","numChecker","placeholder","round","GameRules","PLACEBET","CANCELBET","DEAL","HIT","DOUBLE","STAND","DEALERMOVE","ENDGAME","calculateScore","cardsToEvaluate","calculations","values","elem","push","reduce","total","sum","includes","i","length","filteredCalculations","filter","max","min","images","forEach","corectedElem","replace","importAll","require","updateObject","oldObject","newValues","assign","Hit","deck","playerCards","currentPlayer","slice","hitCard","src","symbol","card","shift","playerScore","firstMove","dealerCards","dealerScore","Double","pot","newCurrentMoneyVal","newPotVal","playerTurn","blackjack","score","cards","compareScores","result","text","Score","containerClass","scoreArray","split","faceDownCard","image","correctedElem","importImage","Card","backOfTheCard","imageSource","hidden","default","alt","draggable","AllCardsContainer","props","timeouts","componentCleanup","bind","this","player","cardsAreDealt","dealerMove","endGame","comparisonResult","addEventListener","clearInterval","removeEventListener","ind","React","Component","DealerCards","dispatch","move","EndGame","PlayerCards","Pot","cancelBet","title","EndGameResult","endGameText","Button","buttonText","handleClick","styleClass","dealCards","hit","stand","double","buttons","chipsImages","Chip","chipImage","AllPlayersChips","placeBet","possibleChips","calculateAvailableChips","chips","idx","ChipsContainer","cash","getAttribute","PlaceBet","BlackJack","tooltip","getElementById","tooltipText","visibility","event","stopPropagation","Home","Settings","Feed","ContentContainer","exact","path","owned","close","expires","NavBar","to","icon","Divider","SideBarIcon","App","Boolean","location","hostname","suits","extension","cardObject","j","shuffle","array","t","m","arrayCopy","doublePot","winBet","shuffledDeck","initialState","charlieWin","RootReducer","action","alert","store","createStore","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e33e0764.chunk.js","sourcesContent":["var map = {\n\t\"./10_of_clubs.svg\": 44,\n\t\"./10_of_diamonds.svg\": 45,\n\t\"./10_of_hearts.svg\": 46,\n\t\"./10_of_spades.svg\": 47,\n\t\"./2_of_clubs.svg\": 48,\n\t\"./2_of_diamonds.svg\": 49,\n\t\"./2_of_hearts.svg\": 50,\n\t\"./2_of_spades.svg\": 51,\n\t\"./3_of_clubs.svg\": 52,\n\t\"./3_of_diamonds.svg\": 53,\n\t\"./3_of_hearts.svg\": 54,\n\t\"./3_of_spades.svg\": 55,\n\t\"./4_of_clubs.svg\": 56,\n\t\"./4_of_diamonds.svg\": 57,\n\t\"./4_of_hearts.svg\": 58,\n\t\"./4_of_spades.svg\": 59,\n\t\"./5_of_clubs.svg\": 60,\n\t\"./5_of_diamonds.svg\": 61,\n\t\"./5_of_hearts.svg\": 62,\n\t\"./5_of_spades.svg\": 63,\n\t\"./6_of_clubs.svg\": 64,\n\t\"./6_of_diamonds.svg\": 65,\n\t\"./6_of_hearts.svg\": 66,\n\t\"./6_of_spades.svg\": 67,\n\t\"./7_of_clubs.svg\": 68,\n\t\"./7_of_diamonds.svg\": 69,\n\t\"./7_of_hearts.svg\": 70,\n\t\"./7_of_spades.svg\": 71,\n\t\"./8_of_clubs.svg\": 72,\n\t\"./8_of_diamonds.svg\": 73,\n\t\"./8_of_hearts.svg\": 74,\n\t\"./8_of_spades.svg\": 75,\n\t\"./9_of_clubs.svg\": 76,\n\t\"./9_of_diamonds.svg\": 77,\n\t\"./9_of_hearts.svg\": 78,\n\t\"./9_of_spades.svg\": 79,\n\t\"./ace_of_clubs.svg\": 80,\n\t\"./ace_of_diamonds.svg\": 81,\n\t\"./ace_of_hearts.svg\": 82,\n\t\"./ace_of_spades.svg\": 83,\n\t\"./jack_of_clubs.svg\": 84,\n\t\"./jack_of_diamonds.svg\": 85,\n\t\"./jack_of_hearts.svg\": 86,\n\t\"./jack_of_spades.svg\": 87,\n\t\"./king_of_clubs.svg\": 88,\n\t\"./king_of_diamonds.svg\": 89,\n\t\"./king_of_hearts.svg\": 90,\n\t\"./king_of_spades.svg\": 91,\n\t\"./queen_of_clubs.svg\": 92,\n\t\"./queen_of_diamonds.svg\": 93,\n\t\"./queen_of_hearts.svg\": 94,\n\t\"./queen_of_spades.svg\": 95\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43;","export default __webpack_public_path__ + \"static/media/10_of_clubs.50c7ecfa.svg\";","export default __webpack_public_path__ + \"static/media/10_of_diamonds.5f8fb73e.svg\";","export default __webpack_public_path__ + \"static/media/10_of_hearts.c64e72c6.svg\";","export default __webpack_public_path__ + \"static/media/10_of_spades.5ad34839.svg\";","export default __webpack_public_path__ + \"static/media/2_of_clubs.484b9fda.svg\";","export default __webpack_public_path__ + \"static/media/2_of_diamonds.8f8319ae.svg\";","export default __webpack_public_path__ + \"static/media/2_of_hearts.7e01a8bc.svg\";","export default __webpack_public_path__ + \"static/media/2_of_spades.b7f57979.svg\";","export default __webpack_public_path__ + \"static/media/3_of_clubs.ccb76ce1.svg\";","export default __webpack_public_path__ + \"static/media/3_of_diamonds.e21ac80f.svg\";","export default __webpack_public_path__ + \"static/media/3_of_hearts.e08062fe.svg\";","export default __webpack_public_path__ + \"static/media/3_of_spades.be7280c2.svg\";","export default __webpack_public_path__ + \"static/media/4_of_clubs.611fe312.svg\";","export default __webpack_public_path__ + \"static/media/4_of_diamonds.d2bc915d.svg\";","export default __webpack_public_path__ + \"static/media/4_of_hearts.17544486.svg\";","export default __webpack_public_path__ + \"static/media/4_of_spades.19ff2072.svg\";","export default __webpack_public_path__ + \"static/media/5_of_clubs.21d95f18.svg\";","export default __webpack_public_path__ + \"static/media/5_of_diamonds.e2c10892.svg\";","export default __webpack_public_path__ + \"static/media/5_of_hearts.459e5cac.svg\";","export default __webpack_public_path__ + \"static/media/5_of_spades.30e132b0.svg\";","export default __webpack_public_path__ + \"static/media/6_of_clubs.c3a32055.svg\";","export default __webpack_public_path__ + \"static/media/6_of_diamonds.9654ba42.svg\";","export default __webpack_public_path__ + \"static/media/6_of_hearts.6d804150.svg\";","export default __webpack_public_path__ + \"static/media/6_of_spades.556dd28d.svg\";","export default __webpack_public_path__ + \"static/media/7_of_clubs.d2ff2802.svg\";","export default __webpack_public_path__ + \"static/media/7_of_diamonds.c232741a.svg\";","export default __webpack_public_path__ + \"static/media/7_of_hearts.8ac917fb.svg\";","export default __webpack_public_path__ + \"static/media/7_of_spades.8e6e835b.svg\";","export default __webpack_public_path__ + \"static/media/8_of_clubs.d0a3d2fa.svg\";","export default __webpack_public_path__ + \"static/media/8_of_diamonds.a76e278a.svg\";","export default __webpack_public_path__ + \"static/media/8_of_hearts.8b36e16f.svg\";","export default __webpack_public_path__ + \"static/media/8_of_spades.f118eb8a.svg\";","export default __webpack_public_path__ + \"static/media/9_of_clubs.32dd1153.svg\";","export default __webpack_public_path__ + \"static/media/9_of_diamonds.072f632d.svg\";","export default __webpack_public_path__ + \"static/media/9_of_hearts.172bc27a.svg\";","export default __webpack_public_path__ + \"static/media/9_of_spades.270fe9f6.svg\";","export default __webpack_public_path__ + \"static/media/ace_of_clubs.556f29bf.svg\";","export default __webpack_public_path__ + \"static/media/ace_of_diamonds.86368981.svg\";","export default __webpack_public_path__ + \"static/media/ace_of_hearts.fdb3259b.svg\";","export default __webpack_public_path__ + \"static/media/ace_of_spades.efb7d779.svg\";","export default __webpack_public_path__ + \"static/media/jack_of_clubs.fac4ea97.svg\";","export default __webpack_public_path__ + \"static/media/jack_of_diamonds.446ad5ee.svg\";","export default __webpack_public_path__ + \"static/media/jack_of_hearts.5f873091.svg\";","export default __webpack_public_path__ + \"static/media/jack_of_spades.4e80fe61.svg\";","export default __webpack_public_path__ + \"static/media/king_of_clubs.ab254a77.svg\";","export default __webpack_public_path__ + \"static/media/king_of_diamonds.77279bf2.svg\";","export default __webpack_public_path__ + \"static/media/king_of_hearts.c3f74771.svg\";","export default __webpack_public_path__ + \"static/media/king_of_spades.b9a32599.svg\";","export default __webpack_public_path__ + \"static/media/queen_of_clubs.b68541fd.svg\";","export default __webpack_public_path__ + \"static/media/queen_of_diamonds.b7e616d9.svg\";","export default __webpack_public_path__ + \"static/media/queen_of_hearts.41a91ce2.svg\";","export default __webpack_public_path__ + \"static/media/queen_of_spades.c9293949.svg\";","var map = {\n\t\"./faceDownCard.jpg\": 97\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96;","export default __webpack_public_path__ + \"static/media/faceDownCard.ba9ec606.jpg\";","var map = {\n\t\"./1.png\": 99,\n\t\"./10.png\": 100,\n\t\"./100.png\": 101,\n\t\"./1000.png\": 102,\n\t\"./10000.png\": 103,\n\t\"./5.png\": 104,\n\t\"./50.png\": 105,\n\t\"./500.png\": 106\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 98;","export default __webpack_public_path__ + \"static/media/1.406e3367.png\";","export default __webpack_public_path__ + \"static/media/10.b8fde37f.png\";","export default __webpack_public_path__ + \"static/media/100.6683fec1.png\";","export default __webpack_public_path__ + \"static/media/1000.b1b07d28.png\";","export default __webpack_public_path__ + \"static/media/10000.a40fc5b0.png\";","export default __webpack_public_path__ + \"static/media/5.e672054b.png\";","export default __webpack_public_path__ + \"static/media/50.df578f40.png\";","export default __webpack_public_path__ + \"static/media/500.2556f5c5.png\";","import { useEffect, useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n};\n\nconst useDarkMode = () => {\n  const [enabled, setEnabled] = useLocalStorage(\"dark-theme\");\n  const isEnabled = typeof enabledState === \"undefined\" && enabled;\n\n  useEffect(() => {\n    const className = \"dark\";\n    const bodyClass = window.document.body.classList;\n\n    isEnabled ? bodyClass.add(className) : bodyClass.remove(className);\n  }, [enabled, isEnabled]);\n\n  return [enabled, setEnabled];\n};\n\nexport default useDarkMode;\n","import React from 'react';\nimport {\n    FaSearch,\n    FaHashtag,\n    FaRegBell,\n    FaUserCircle,\n    FaMoon,\n    FaSun,\n  } from 'react-icons/fa';\nimport { connect } from 'react-redux';\n  import useDarkMode from '../hooks/useDarkMode';\n  \n  const mapStateToProps = state => ({\n    value: state.currentMoney,\n})\n\n\n\n  const Navigation = (value:any) => {\n    console.log(value);\n    return (\n      <header className='top-navigation'>\n        <ThemeIcon />\n        <BellIcon />\n        <UserCircle />\n        <div className=\"balance\">{value.value + '$'}</div>\n      </header>\n    );\n  };\n\n  const TopNavigation = connect(mapStateToProps)(Navigation);\n  \n  const ThemeIcon = () => {\n    const [darkTheme, setDarkTheme] = useDarkMode();\n    const handleMode = () => setDarkTheme(!darkTheme);\n    return (\n      <span onClick={handleMode}>\n        {darkTheme ? (\n          <FaSun size='24' className='top-navigation-icon' />\n        ) : (\n          <FaMoon size='24' className='top-navigation-icon' />\n        )}\n      </span>\n    );\n  };\n  \n  const Search = () => (\n    <div className='search'>\n      <input className='search-input' type='text' placeholder='Search...' />\n      <FaSearch size='18' className='text-secondary my-auto' />\n    </div>\n  );\n  const BellIcon = () => <FaRegBell size='24' className='top-navigation-icon' />;\n  const UserCircle = () => <FaUserCircle size='24' className='top-navigation-icon' />;\n  const HashtagIcon = () => <FaHashtag size='20' className='title-hashtag' />;\n  const Title = () => <h5 className='title-text'>tailwind-css</h5>;\n  \n  export default TopNavigation;","import './Slots.css'\n\n\nimport React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    value: state.currentMoney,\n})\n\n\nconst SlotsGame = ({value}:any) => {\n\n    const [spin, setSpin] = useState(false);\n    const [ring1, setRing1] = useState(0);\n    const [ring2, setRing2] = useState(0);\n    const [ring3, setRing3] = useState(0);\n    const [price, setPrice] = useState(0);\n    const [input, setInput] = useState(0);\n    const [realBet, setRealBet] = useState(0);\n    const [jackpot, setJackpot] = useState(0);\n    const [balance, setBalance] = useState(value);\n\n\n    useEffect(() => {\n        winInner()\n    }, [ring3])\n\n\n function row1() {\n\n    if (!spin) {\n    return (\n        <>\n        <div className=\"ringEnd\">🍓</div>\n        <div className=\"ringEnd\">🍇</div>\n        <div className=\"ringEnd\">🍊</div>\n        <div className=\"ringEnd\">🥭</div>\n        </>\n            )\n    } else if (spin && ring1 == undefined) {\n    return (\n        <>\n        <div className=\"ringMoving\">🍓</div>\n        <div className=\"ringMoving\">🍇</div>\n        <div className=\"ringMoving\">🍊</div>\n        <div className=\"ringMoving\">🥭</div>\n        </>\n            )\n    } else if (ring1 >= 1 && ring1 <= 50 ) {\n    return (\n        <>\n        <div className=\"ringEnd\">🍓</div>\n        <div className=\"ringEnd\">🍇</div>\n        <div className=\"ringEnd\">🍊</div>\n        <div className=\"ringEnd\">🥭</div>\n        </>\n            )  \n    } else if (ring1 > 50 && ring1 <= 75) {\n        return (\n            <>\n            <div className=\"ringEnd\">🍇</div>\n            <div className=\"ringEnd\">🍊</div>\n            <div className=\"ringEnd\">🥭</div>\n            <div className=\"ringEnd\">🍓</div>\n            </>\n                )  \n        } else if (ring1 > 75 && ring1 <= 95) {\n            return (\n                <>\n                <div className=\"ringEnd\">🍊</div>\n                <div className=\"ringEnd\">🥭</div>\n                <div className=\"ringEnd\">🍓</div>\n                <div className=\"ringEnd\">🍇</div>\n                </>\n                    )  \n            } else if (ring1 > 95 && ring1 <= 100) {\n                return (\n                    <>\n                    <div className=\"ringEnd\">🥭</div>\n                    <div className=\"ringEnd\">🍓</div>\n                    <div className=\"ringEnd\">🍇</div>\n                    <div className=\"ringEnd\">🍊</div>\n                    </>\n                        )  \n                }\n }\n\n function row2() {\n\n    if (!spin) {\n    return (\n        <>\n        <div className=\"ringEnd\">🥭</div>\n        <div className=\"ringEnd\">🍓</div>\n        <div className=\"ringEnd\">🍇</div>\n        <div className=\"ringEnd\">🍊</div>\n        </>\n            )\n    } else if (spin && ring2 == undefined) {\n    return (\n        <>\n        <div className=\"ringMoving\">🍓</div>\n        <div className=\"ringMoving\">🍇</div>\n        <div className=\"ringMoving\">🍊</div>\n        <div className=\"ringMoving\">🥭</div>\n        </>\n            )\n    } else if (ring2 >= 1 && ring2 <= 50 ) {\n        return (\n            <>\n            <div className=\"ringEnd\">🍓</div>\n            <div className=\"ringEnd\">🍇</div>\n            <div className=\"ringEnd\">🍊</div>\n            <div className=\"ringEnd\">🥭</div>\n            </>\n                )  \n        } else if (ring2 > 50 && ring2 <= 75) {\n            return (\n                <>\n                <div className=\"ringEnd\">🍇</div>\n                <div className=\"ringEnd\">🍊</div>\n                <div className=\"ringEnd\">🥭</div>\n                <div className=\"ringEnd\">🍓</div>\n                </>\n                    )  \n            } else if (ring2 > 75 && ring2 <= 95) {\n                return (\n                    <>\n                    <div className=\"ringEnd\">🍊</div>\n                    <div className=\"ringEnd\">🥭</div>\n                    <div className=\"ringEnd\">🍓</div>\n                    <div className=\"ringEnd\">🍇</div>\n                    </>\n                        )  \n                } else if (ring2 > 95 && ring2 <= 100) {\n                    return (\n                        <>\n                        <div className=\"ringEnd\">🥭</div>\n                        <div className=\"ringEnd\">🍓</div>\n                        <div className=\"ringEnd\">🍇</div>\n                        <div className=\"ringEnd\">🍊</div>\n                        </>\n                            )  \n                    }\n\n }\n\n function row3() {\n\n    if (!spin) {\n    return (\n        <>\n        <div className=\"ringEnd\">🥭</div>\n        <div className=\"ringEnd\">🍓</div>\n        <div className=\"ringEnd\">🍇</div>\n        <div className=\"ringEnd\">🍊</div>\n        </>\n            )\n    } else if (spin && ring3 == undefined) {\n    return (\n        <>\n        <div className=\"ringMoving\">🍓</div>\n        <div className=\"ringMoving\">🍇</div>\n        <div className=\"ringMoving\">🍊</div>\n        <div className=\"ringMoving\">🍋</div>\n        <div className=\"ringMoving\">🍍</div>\n        <div className=\"ringMoving\">🥭</div>\n        </>\n            )\n    } else if (ring3 >= 1 && ring3 <= 50 ) {\n        return (\n            <>\n            <div className=\"ringEnd\">🍓</div>\n            <div className=\"ringEnd\">🍇</div>\n            <div className=\"ringEnd\">🍊</div>\n            <div className=\"ringEnd\">🥭</div>\n            </>\n                )  \n        } else if (ring3 > 50 && ring3 <= 75) {\n            return (\n                <>\n                <div className=\"ringEnd\">🍇</div>\n                <div className=\"ringEnd\">🍊</div>\n                <div className=\"ringEnd\">🥭</div>\n                <div className=\"ringEnd\">🍓</div>\n                </>\n                    )  \n            } else if (ring3 > 75 && ring3 <= 95) {\n                return (\n                    <>\n                    <div className=\"ringEnd\">🍊</div>\n                    <div className=\"ringEnd\">🥭</div>\n                    <div className=\"ringEnd\">🍓</div>\n                    <div className=\"ringEnd\">🍇</div>\n                    </>\n                        )  \n                } else if (ring3 > 95 && ring3 <= 100) {\n                    return (\n                        <>\n                        <div className=\"ringEnd\">🥭</div>\n                        <div className=\"ringEnd\">🍓</div>\n                        <div className=\"ringEnd\">🍇</div>\n                        <div className=\"ringEnd\">🍊</div>\n                        </>\n                            )  \n                    }\n     }\n\n     function winInner() {\n      if (ring1 <= 50 && ring2 <= 50 && ring3 <= 50 && ring1 != undefined) {\n          setPrice(1)\n      } else if (ring1 > 50 && ring1 <= 75 && ring2 > 50 && ring2 <= 75 && ring3 > 50 && ring3 <= 75 && ring1 != undefined) {\n          setPrice(2)\n      } else if (ring1 > 75 && ring1 <= 95 && ring2 > 75 && ring2 <= 95 && ring3 > 75 && ring3 <= 95 && ring1 != undefined) {\n          setPrice(3)\n      } else if (ring1 > 95 && ring1 <= 100 && ring2 > 95 && ring2 <= 100 && ring3 > 95 && ring3 <= 100 && ring1 != undefined) {\n          setPrice(4)\n      } else {\n          setPrice(0)\n      } \n  }\n\n function rand() {\n      setRing1(Math.floor(Math.random() * (100 - 1) + 1))\n      setTimeout(function(){setRing2(Math.floor(Math.random() * (100 - 1) + 1))}, 1000)\n      setTimeout(function(){setRing3(Math.floor(Math.random() * (100 - 1) + 1))}, 2000)\n    }\n\nfunction play() {\n    if (ring3 > 1 || !spin){\n    if (input <= balance && input >= 1){\n    setRealBet(input)\n    setSpin(true)\n    setRing1(1)\n    setRing2(1)\n    setRing3(1)\n    setBalance(balance - input)\n    setJackpot(jackpot + (input / 2))\n    setTimeout(function(){\n   rand()\n    }, 2000)\n} else {\n    setPrice(10)\n}\n\n}\n}\n\n\nfunction win() {\n    if (ring1 <= 50 && ring2 <= 50 && ring3 <= 50 && ring1 != undefined) {\n        setPrice(1)\n        setBalance(balance + (balance * 15))\n    } else if (ring1 > 50 && ring1 <= 75 && ring2 > 50 && ring2 <= 75 && ring3 > 50 && ring3 <= 75 && ring1 != undefined) {\n        setPrice(2)\n        setBalance(balance + (balance * 20))\n    } else if (ring1 > 75 && ring1 <= 95 && ring2 > 75 && ring2 <= 95 && ring3 > 75 && ring3 <= 95 && ring1 != undefined) {\n        setPrice(3)\n        setBalance(balance + (balance * 25))\n    } else if (ring1 > 95 && ring1 <= 100 && ring2 > 95 && ring2 <= 100 && ring3 > 95 && ring3 <= 100 && ring1 != undefined) {\n        setPrice(4)\n        setBalance(balance + jackpot)\n        setJackpot(0)\n    } else {\n        setPrice(0)\n    } \n}\n\nfunction premio() {\n    if (price === 1 && ring3 > 1) {\n        return (\n        <p className=\"priceInd\">{\"🍇 X15 You've won \" + (realBet * 15) + \"€!\"}</p>\n        )\n    } else if (price === 2 && ring3 > 1) {\n        return (\n            <p className=\"priceInd\">{\"🍊 X20 You've won \" + (realBet * 20) + \"€!\"}</p>\n            )\n    } else if (price === 3 && ring3 > 1) {\n        return (\n            <p className=\"priceInd\">{\"🥭 X25 You've won \" + (realBet * 25) + \"€!\"}</p>\n            )\n    } else if (price === 4 && ring3 > 1) {\n        return (\n            <p className=\"priceInd\">{\"🍓 Jackpot! You've won: \" + (jackpot) + \"€!\"}</p>\n            )\n    } else if (price === 0 && ring3 > 1) {\n        return (\n            <p className=\"priceInd\">😧 So close! But no luck...</p>\n            )\n    } else if (price === 10) {\n        return (\n            <p className=\"priceInd\">🥶 <span style={{color: `red`}}>Not enough funds</span> </p>\n            )\n}\n}\n\nfunction numChecker(e) {\n    const value = e.target.value;\n    const regex = /^[0-9]+$/;\n    if (value.match(regex) && parseInt(value) >= 0 || value === \"\") {\n        setInput(value);\n    }\n}\n    return (\n        <div className=\"fullSlot\">\n        <h1 className=\"casinoName\">Slots</h1>\n        <h1 className=\"price\">{\"Jackpot: \" + jackpot + \"€\"}</h1>\n        <div className=\"slot\">\n        <div className=\"row\">\n        {row1()}\n        </div>\n        <div className=\"row\">\n        {row2()}\n        </div>\n        <div className=\"row\">\n        {row3()}\n        </div>\n        </div>\n        <h1 className=\"price\">\n        {premio()}\n        </h1>\n        <div className=\"slotFoot\">\n        <input value={input} type=\"number\" onChange={(e) => numChecker(e)} className=\"betInput\" placeholder=\"0€\"></input>\n        <button className=\"spinButton\" onClick={() => play()}>Spin</button>\n        </div>\n        <h1 className=\"price\">{\"Available cash: \" + Math.round((balance * 100)) / 100 + \"€\"}</h1>\n        <button onClick={() => setBalance(balance + 1000)} className=\"buyMoreButton\">Add 1000 €</button>\n        </div>\n        \n    )\n}\n\nconst Slots = connect(mapStateToProps)(SlotsGame);\n\n\nexport default Slots;\n","import React from 'react';\r\n\r\nconst GameRules = () =>{\r\n    return(\r\n        <div id=\"tooltip\">\r\n          <i className=\"fas fa-info-circle info\"></i>\r\n          <div id = 'tooltipText'>\r\n              <p>Dealer must draw to 16 and stand on all 17's.</p>\r\n              <p>Blackjack pays 2 to 1.</p>\r\n              <p>There is a Charlie Win option: Player wins if he draws five cards without busting, irrespective of the dealer's hand.</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameRules;","const PLACEBET = 'PLACEBET';\r\nconst CANCELBET = 'CANCELBET'\r\nconst DEAL = 'DEAL';\r\nconst HIT = 'HIT';\r\nconst DOUBLE = 'DOUBLE';\r\nconst STAND = 'STAND';\r\nconst DEALERMOVE = 'DEALERMOVE';\r\nconst ENDGAME = 'ENDGAME';\r\n\r\nexport{\r\n    PLACEBET,\r\n    CANCELBET,\r\n    DEAL,\r\n    HIT,\r\n    DOUBLE,\r\n    STAND,\r\n    DEALERMOVE,\r\n    ENDGAME\r\n}","const calculateScore = (cardsToEvaluate) => {  // score of cards in a hand\r\n    const calculations = [];\r\n    let values = cardsToEvaluate.map(elem => elem.value);\r\n    calculations.push(values.reduce((total, sum) => total + sum));\r\n\r\n    if(values.includes(1)){ \r\n        // ace card can have value 1 and 11. turn aces to 11 and calculate again\r\n        for (let i = 0 ; i < values.length; i++){\r\n            if(values[i] === 1){\r\n                values[i] = 11;\r\n\r\n                calculations.push(values.reduce((total, sum) => total + sum));\r\n            }\r\n        }\r\n    }\r\n    let filteredCalculations = calculations.filter(elem => elem <= 21);\r\n    \r\n    // filteredCalculations can be returned as an array or an integer depending on whether there is an Ace (1 & 11) in a hand\r\n    if(filteredCalculations.length > 0){\r\n        if(filteredCalculations.length > 1){\r\n            return filteredCalculations;\r\n        }else{\r\n            return Math.max(...filteredCalculations)\r\n        }\r\n    }else{ // the case when score is over 21\r\n        return Math.min(...calculations)\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    calculateScore\r\n}\r\n","import { calculateScore } from '../Constants/calculateScore';\r\n\r\nconst importAll = (req) => {\r\n    // import all card images\r\n    let images = {}\r\n    \r\n    req.keys().forEach(elem => {\r\n    // corecting filename for each file, adapting it for later use\r\n      let corectedElem = elem.replace('./','');\r\n      corectedElem = corectedElem.replace('_of_', '');\r\n      corectedElem = corectedElem.replace('spades', 'S');\r\n      corectedElem = corectedElem.replace('clubs', 'C');\r\n      corectedElem = corectedElem.replace('diamonds', 'D');\r\n      corectedElem = corectedElem.replace('hearts', 'H');\r\n  \r\n     images[corectedElem] = req(elem);\r\n    \r\n    });\r\n    return images;\r\n}\r\n  \r\nconst images = importAll(require.context('../SVG-cards-1.3', false, /\\.svg$/));\r\n\r\nconst updateObject = (oldObject, newValues) => {  // source Redux documentation\r\n    // Encapsulate the idea of passing a new object as the first parameter\r\n    // to Object.assign to ensure we correctly copy data instead of mutating\r\n    return Object.assign({}, oldObject, newValues)\r\n}\r\n\r\nconst Hit = (deck, playerCards, currentPlayer) => {  \r\n    // draws a card from the deck\r\n    let playerScore, dealerScore;\r\n\r\n    deck = deck.slice();  // make a copy\r\n    playerCards = playerCards.slice(); \r\n\r\n    let hitCard = {src: images[deck[0].symbol], card: deck[0]};  // first card from deck\r\n\r\n    deck.shift();\r\n    playerCards.push(hitCard);\r\n\r\n    if(currentPlayer === 'player'){ // drawing for player\r\n        const cardsToEvaluate = playerCards.map(elem => {return elem.card})\r\n        playerScore = calculateScore(cardsToEvaluate);\r\n\r\n        const newValues = {\r\n            deck,\r\n            playerCards,\r\n            playerScore,\r\n            firstMove: false\r\n        }\r\n\r\n        return newValues;\r\n    }else if(currentPlayer === 'dealer'){  // drawing for dealer\r\n        const cardsToEvaluate = playerCards.map(elem => {return elem.card})\r\n        dealerScore = calculateScore(cardsToEvaluate);\r\n        let dealerCards = playerCards;\r\n\r\n        const newValues = {\r\n            deck,\r\n            dealerCards,\r\n            dealerScore\r\n        }\r\n\r\n        return newValues;\r\n    }\r\n}\r\n\r\nconst Double = (currentMoney, pot, deck, playerCards) => { // double down\r\n    let newCurrentMoneyVal = currentMoney - pot;\r\n    let newPotVal = pot + pot;\r\n\r\n    let newValues = Hit(deck, playerCards, 'player');\r\n    newValues = Object.assign({}, newValues, {\r\n        currentMoney: newCurrentMoneyVal,\r\n        pot: newPotVal,\r\n        playerTurn: false,\r\n        firstMove: false\r\n    });\r\n\r\n    return newValues;\r\n}\r\n\r\n\r\nconst blackjack = (score, cards) => {\r\n    // returns boolean value\r\n    return  score === 21 && cards.length === 2;\r\n}\r\n\r\nconst compareScores  = function(playerScore, dealerScore, playerCards, dealerCards):any {\r\n    playerScore = playerScore.length === 2? playerScore[1] : playerScore;\r\n    dealerScore = dealerScore.length === 2? dealerScore[1] : dealerScore;\r\n    \r\n    if(playerCards.length === 5 && playerScore <= 21 ){\r\n        const text = 'Charlie Win!!!';\r\n        return {\r\n            result: 'win',\r\n            text\r\n        }\r\n    }\r\n    else if(blackjack(dealerScore, dealerCards) && blackjack(playerScore, playerCards)){\r\n        const text = 'Both players had Blackjack. Push.';\r\n        return {\r\n            result:'push',\r\n            text\r\n        };\r\n    }else if(playerScore === 21 && dealerScore === 21){\r\n        if(blackjack(playerScore, playerCards)){\r\n            const text = 'Player won because of blackjack: '+ playerScore + ' = ' + dealerScore + '.';\r\n            return {\r\n                result: 'win',\r\n                text\r\n            };\r\n        }else if(blackjack(dealerScore, dealerCards)){\r\n            const text = 'Dealer won because of blackjack: ' + playerScore + ' = ' + dealerScore + '.';\r\n            return {\r\n                result:'lose',\r\n                text\r\n            };\r\n        }else{\r\n            const text = 'Neither player had blackjack, it is a draw. Push.'\r\n            return {\r\n                result: 'push',\r\n                text\r\n            };\r\n        }\r\n    }else if(blackjack(dealerScore, dealerCards)){\r\n        const text = 'Dealer Blackjack, player lost.';\r\n        return {\r\n            result:'lose',\r\n            text\r\n        };\r\n    }else if(blackjack(playerScore, playerCards)){\r\n        const text = 'Player got Blackjack!!!';\r\n        return {\r\n            result: 'blackjack',\r\n            text\r\n        }\r\n    }else if(playerScore > 21){\r\n        const text = 'Player busted: ' + playerScore + '.';\r\n        return {\r\n            result:'lose',\r\n            text\r\n        }\r\n    }else if(dealerScore > 21){\r\n        const text = 'Dealer busted: ' + dealerScore + '. Player wins.'\r\n        return {\r\n            result :'win',\r\n            text\r\n        }\r\n    }else if(playerScore > dealerScore){\r\n        const text = 'Player won, better score: ' + playerScore + ' > ' + dealerScore + '.';\r\n        return {\r\n            result: 'win',\r\n            text\r\n        }\r\n    }else if(dealerScore > playerScore){\r\n        const text = 'Dealer won, better score: ' + dealerScore + ' > ' + playerScore + '.';\r\n        return { \r\n            result:'lose',\r\n            text\r\n        }\r\n    }else if(dealerScore === playerScore){\r\n        const text = 'Equal scores: ' + playerScore + ' = ' + dealerScore + '. Push.'\r\n        return {\r\n            result:'push',\r\n            text\r\n        }\r\n    }else{\r\n        console.log('error')\r\n        return '---'\r\n    }\r\n}\r\n\r\nexport{\r\n    updateObject,\r\n    Hit,\r\n    Double,\r\n    compareScores\r\n}","import React from 'react';\r\n\r\nconst Score = ({score, playerTurn}) => {\r\n    let className = 'score ';\r\n    let containerClass ;\r\n    let scoreArray =[];\r\n\r\n    if(typeof(score) === 'string'){\r\n        scoreArray = score.split('/');\r\n        scoreArray = scoreArray.map(elem => parseInt(elem));\r\n    }\r\n\r\n    if(playerTurn === true){\r\n        className += 'hidden '\r\n    }\r\n    if(scoreArray[1] < 21 || score < 21){\r\n        className += 'u21Score ';\r\n    }else if(scoreArray[1] === 21 || score === 21){\r\n        className += 'e21Score ';\r\n        containerClass = 'e21ScoreContainer'\r\n    }else{\r\n        className += 'o21Score ';\r\n    }\r\n\r\n    return(\r\n        <div className = {containerClass}>\r\n            <div className = {className}>{score}</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport { compareScores } from '../../../../store/Reducers/herlperFunctions';\r\nimport Score from './Score';\r\n\r\nconst importImage = (req) => { \r\n    let image = {}\r\n    \r\n    req.keys().forEach(elem => {\r\n        let correctedElem = elem.replace('./','');\r\n        correctedElem = correctedElem.replace('.jpg','');\r\n        \r\n        image[correctedElem] = req(elem);\r\n    \r\n    });\r\n    return image;\r\n}\r\nconst faceDownCard:any = importImage(require.context('../../Cards/FaceDown', false, /\\.jpg$/));\r\n\r\n\r\nconst Card = ({imageSource, hidden}:any) => {\r\n    let className = 'cardImage ';\r\n    let backOfTheCard;\r\n    \r\n    if(hidden === true){\r\n        className += 'faceDown ';\r\n        backOfTheCard = <img src = {faceDownCard.faceDownCard.default} alt='back of the card' className = 'cardImage '/>\r\n        \r\n    }else{\r\n        backOfTheCard = <img src = {faceDownCard.faceDownCard.default} alt='back of the card' className = 'cardImage backOfTheCardRotate'/>\r\n    }\r\n    return(\r\n        <div className = 'cardDiv '>\r\n            <div className = 'cardImageContainer'>\r\n                <img src={imageSource} alt='card' className = {className} draggable ='false'/>\r\n                {backOfTheCard}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass AllCardsContainer  extends React.Component <any,any> {\r\n    timeouts:any;\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeouts = [];\r\n        this.componentCleanup = this.componentCleanup.bind(this);\r\n    }\r\n    componentDidUpdate(){\r\n        let {player, cardsAreDealt, playerTurn, dealerMove, dealerCards, dealerScore, playerCards, playerScore, endGame} = this.props;\r\n        let comparisonResult:any = '';\r\n\r\n        if(cardsAreDealt){\r\n            if(player === 'dealer' && !playerTurn){\r\n                if(playerScore > 21){\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[0] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 1800);\r\n\r\n                }else if(playerScore[1] === 21 && playerCards.length === 2){\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[1] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 2200);\r\n\r\n                }else if(compareScores(playerScore, dealerScore, playerCards, dealerCards).text === 'Charlie Win!!!'){\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[2] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 2200);\r\n\r\n                }\r\n                else if(dealerCards.length === 2 && dealerScore[1] === 21){ \r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[0] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 1800);\r\n\r\n                }else if(dealerScore[1] <= 16 || dealerScore <= 16){\r\n                    this.timeouts[1] = setTimeout(() => {\r\n                        dealerMove();\r\n                    }, 1200);\r\n                }else{\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[2] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 2000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('beforeunload', this.componentCleanup)\r\n    }\r\n    componentCleanup(){\r\n        this.timeouts.map(elem => clearInterval(elem)); \r\n    }\r\n    componentWillUnmount(){\r\n        this.componentCleanup();\r\n        window.removeEventListener('beforeunload', this.componentCleanup); \r\n    }\r\n    \r\n    render(){\r\n        let {cardsAreDealt, src, playerTurn, score } = this.props;\r\n        let cards;\r\n        if(cardsAreDealt){\r\n            cards = src.map((elem, ind) => {\r\n                if(playerTurn === true && ind === 1){\r\n                    console.log(elem)\r\n\r\n                    return <Card imageSource = {elem.src.default} key = {ind} hidden = {true}/>\r\n                }else{\r\n                    return <Card imageSource = {elem.src.default} key = {ind} />\r\n                }\r\n            });\r\n            if(score.length > 1){\r\n                score = score[0] + '/' + score[1];\r\n            }\r\n        }\r\n        \r\n        return(\r\n            <div className = 'cardsAndScoreContainer'>\r\n                <div className = 'cardsOnTable'>{cards}</div>\r\n               { score !== 0  && <Score score={score} playerTurn = {playerTurn}/>}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default AllCardsContainer;","import AllCardsContainer from './Presentational/Cards';\r\nimport { DealerMove } from '../../../store/Actions/DealerMove';\r\nimport { EndGame } from '../../../store/Actions/EndGame';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    src: state.dealerCards,\r\n    cardsAreDealt: state.cardsAreDealt,\r\n    player: 'dealer',\r\n    firstMove: state.firstMove,\r\n    playerTurn: state.playerTurn,\r\n    score: state.dealerScore,\r\n    dealerCards: state.dealerCards,\r\n    playerCards: state.playerCards,\r\n    dealerScore: state.dealerScore,\r\n    playerScore: state.playerScore\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dealerMove: (move:any) => dispatch(DealerMove(move)),\r\n    endGame: (comparisonResult) => dispatch(EndGame(comparisonResult))\r\n})\r\n\r\n\r\nconst DealerCards = connect(mapStateToProps, mapDispatchToProps)(AllCardsContainer);\r\n\r\nexport default DealerCards;","import { DEALERMOVE } from '../Constants/ActionTypes';\r\n\r\nexport const DealerMove = (arg:any) => ({\r\n    type: DEALERMOVE\r\n})","import { ENDGAME } from  '../Constants/ActionTypes';\r\n\r\nexport const EndGame = (comparisonResult) =>( {\r\n    type : ENDGAME,\r\n    comparisonResult\r\n})\r\n\r\n","import AllCardsContainer from './Presentational/Cards';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n    src: state.playerCards,\r\n    cardsAreDealt: state.cardsAreDealt,\r\n    player: 'player',\r\n    score: state.playerScore\r\n});\r\n\r\n\r\nconst PlayerCards = connect(mapStateToProps, null) (AllCardsContainer);\r\n\r\nexport default PlayerCards;","import React from 'react';\r\n\r\nconst Pot = ({pot, cancelBet, cardsAreDealt}) => {\r\n    return(\r\n        <div className ='pot'>\r\n            <div>{pot > 0 && pot}$</div>\r\n            \r\n            {(pot > 0 && !cardsAreDealt) && <button onClick = {cancelBet} className = 'cancelBet' title = 'Cancel bet'>x</button>} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pot;","import React from 'react';\r\n\r\nconst EndGameResult = ({endGameText}) => {\r\n    \r\n    return(\r\n        <div className = 'endGameResult'>\r\n        {endGameText !== undefined  && <div className = 'endGameText'>{endGameText}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndGameResult;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CancelBet } from '../../../store/Actions/CancelBet';\r\nimport DealerCards from './DealerCards';\r\nimport PlayerCards from './PlayerCards';\r\nimport Pot from './Presentational/Pot';\r\nimport EndGameResult from './Presentational/EndGameResult';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  pot: state.pot,\r\n  cardsAreDealt: state.cardsAreDealt,\r\n  endGameText: state.endGameText\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  cancelBet : () => dispatch(CancelBet())\r\n})\r\n\r\n\r\nconst Table = ({pot, cancelBet, cardsAreDealt, endGameText}) => {\r\n    return(\r\n        <div className = 'table'>\r\n            <DealerCards/>\r\n            { pot > 0 && <Pot pot = {pot} cancelBet = {cancelBet} cardsAreDealt = {cardsAreDealt}/>}\r\n            {endGameText && <EndGameResult endGameText = {endGameText}/>}\r\n            <PlayerCards/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import { CANCELBET } from '../Constants/ActionTypes';\r\n\r\nexport const CancelBet = () => ({\r\n    type: CANCELBET\r\n});","import React from 'react';\r\n\r\nconst Button = ({buttonText, handleClick, styleClass}) => {\r\n    let className = 'btn '+ styleClass;\r\n\r\n    return(\r\n        <button className = {className} onClick = {handleClick}>{buttonText}</button>\r\n    )\r\n}   \r\n\r\nexport default Button;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Button from './Presentational/Button';\r\nimport { Deal } from '../../../store/Actions/Deal';\r\nimport { Hit } from '../../../store/Actions/Hit';\r\nimport { Stand } from '../../../store/Actions/Stand';\r\nimport { Double } from '../../../store/Actions/Double';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cardsAreDealt: state.cardsAreDealt,\r\n    firstMove: state.firstMove,\r\n    pot : state.pot,\r\n    playerTurn : state.playerTurn\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dealCards: () => dispatch(Deal()),\r\n    hit: () => dispatch(Hit()),\r\n    stand: () => dispatch(Stand()),\r\n    double: () => dispatch(Double())\r\n})\r\n\r\nconst ButtonsContainer = ({cardsAreDealt, firstMove, playerTurn, dealCards, pot, hit, stand, double}) => {\r\n  let buttons;\r\n  if(cardsAreDealt && playerTurn){\r\n    if(firstMove){\r\n      buttons = [\r\n        <Button key='hit' buttonText = 'Hit' handleClick = {hit} styleClass = 'btnHit'/>,  \r\n        <Button key = 'double' buttonText = 'Double' handleClick = {double} styleClass = 'btnDouble'/>, // can only be played on the first move\r\n        <Button key = 'stand' buttonText = 'Stand' handleClick = {stand} styleClass = 'btnStand'/>\r\n      ]\r\n    }else if(!firstMove){\r\n      buttons = [\r\n        <Button key='hit' buttonText = 'Hit' handleClick = {hit} styleClass = 'btnHit'/>,\r\n        <Button key = 'stand' buttonText = 'Stand' handleClick = {stand} styleClass = 'btnStand'/>\r\n      ]\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className = 'buttonsContainer'>\r\n      {!cardsAreDealt && pot>0 && <Button buttonText = 'Deal' handleClick = {dealCards} styleClass = 'btnDeal'/>}\r\n      {buttons}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsContainer);\r\n","import { DEAL } from '../Constants/ActionTypes';\r\n\r\nexport const Deal = () => ({\r\n    type: DEAL\r\n})","import { HIT } from '../Constants/ActionTypes';\r\n\r\nexport const Hit = () => ({\r\n    type: HIT\r\n})","import { STAND } from '../Constants/ActionTypes';\r\n\r\nexport const Stand = () => ({\r\n    type: STAND\r\n})","import { DOUBLE } from '../Constants/ActionTypes';\r\n\r\nexport const Double = () => ({\r\n    type: DOUBLE\r\n})","import React from 'react';\r\nconst importAll = (req) => {\r\n    let images = {}\r\n    \r\n    req.keys().forEach(elem => {\r\n        let correctedElem = elem.replace('./','');\r\n        correctedElem = correctedElem.replace('.png','');\r\n        \r\n        images[correctedElem] = req(elem);\r\n    \r\n    });\r\n    return images;\r\n}\r\n  \r\nconst chipsImages = importAll(require.context('../../Cards/Chips', false, /\\.png$/));\r\n\r\nconsole.log(chipsImages);\r\n\r\nconst calculateAvailableChips = (currentMoney) =>{\r\n    const chips = [1, 5, 10, 50, 100, 500, 1000, 10000]\r\n    let possibleChips = chips.filter(elem => currentMoney>= elem);\r\n\r\n    if(possibleChips.length > 6){\r\n        return possibleChips.slice(-6);\r\n    }\r\n\r\n    return possibleChips;\r\n}\r\n\r\nconst Chip = function({value, onClick}:any):any {\r\n    let chipImage = chipsImages[value];\r\n    return (\r\n       \r\n        <div className ='chip' \r\n        //@ts-ignore  \r\n        value = {value}  onClick = {onClick}>\r\n            <img alt ='chipimg'  //@ts-ignore\r\n             value = {value}  className = 'chipImage' src ={chipImage.default} />\r\n            <span \r\n            //@ts-ignore\r\n            value = {value} >{value}$</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AllPlayersChips = ({cardsAreDealt, currentMoney, placeBet}) => {\r\n    let possibleChips = calculateAvailableChips(currentMoney);\r\n    \r\n    let chips = possibleChips.map((elem, idx) => {\r\n        return <Chip onClick = {placeBet} key={idx} value = {elem}/>\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {!cardsAreDealt && \r\n            <div className = 'allPlayersChips'>\r\n                {chips}\r\n            </div>\r\n            }\r\n            <div className = 'currentMoney'>Your current cash: {currentMoney}$</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AllPlayersChips;","import {connect} from 'react-redux';\r\nimport AllPlayersChips from './Presentational/Chips';\r\nimport { PlaceBet } from '../../../store/Actions/PlaceBet';\r\n\r\nconst mapStateToProps = state => ({\r\n    currentMoney: state.currentMoney,\r\n    cardsAreDealt: state.cardsAreDealt\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    placeBet : (e) => {\r\n        const cash = parseInt(e.target.getAttribute('value'));\r\n        dispatch(PlaceBet(cash));\r\n    }\r\n})\r\n\r\nconst ChipsContainer = connect(mapStateToProps, mapDispatchToProps)(AllPlayersChips);\r\n\r\nexport default ChipsContainer;","import { PLACEBET } from '../Constants/ActionTypes';\r\n\r\nexport const PlaceBet = (cash) => ({\r\n    type: PLACEBET,\r\n    cash\r\n})","import React, { Component } from 'react';\nimport GameRules from './Components/Presentational/GameRules';\nimport Table from './Components/Table';\nimport ButtonsContainer from './Components/ButtonsContainer';\nimport ChipsContainer from './Components/ChipsContainer';\nimport './index.css';\nimport './Styles/styles.scss';\n\n\nclass BlackJack extends Component{  \n\n  componentDidMount(){\n    const tooltip = document.getElementById('tooltip');\n    \n    const tooltipText = document.getElementById('tooltipText');\n    tooltipText.style.visibility ='hidden';\n\n    tooltip.addEventListener('click', (event)=>{\n      event.stopPropagation();\n\n      if(tooltipText.style.visibility === 'hidden'){\n        tooltipText.style.visibility = 'visible';\n      }else{\n        tooltipText.style.visibility = 'hidden';\n      }\n    })\n  }\n\n  render(){\n    return(\n     <>\n        <GameRules/> {/* - tooltip text*/}\n        \n        <div className = 'tableContainer'>\n          <Table/>\n        </div> \n\n        <div className = \"chips-block\">\n          <ButtonsContainer/>\n          <ChipsContainer/>\n        </div>      \n\n        <div className = 'carpet'>\n\n        </div>\n      </>\n    )\n  }\n}\n\nexport default BlackJack;","import TopNavigation from './TopNavigation';\nimport { BsPlusCircleFill } from 'react-icons/bs';\nimport { Switch , Route} from \"react-router-dom\"\nimport FlyToBoon from './FlyToBoon';\nimport React from 'react';\nimport Slots from './Slots';\nimport BlackJack from './blackJack/BlackJack';\n\nconst ContentContainer = () => {\n  return (\n    <div className='content-container'>\n      <TopNavigation />\n      <div className='content-list h-screen'>\n          <Switch>\n            <Route exact path=\"/\">\n                <Home/>\n            </Route>\n            <Route path=\"/settings\">\n                <Settings/>\n            </Route>\n            <Route path=\"/jack\">\n                <BlackJack/>\n            </Route>\n            <Route path=\"/feed\">\n                <Feed/>\n            </Route>\n            <Route path=\"/Slots\">\n                <Slots id = {1} owned = {1} close = {false} expires = {false}/>\n            </Route>\n          </Switch>\n       </div>\n    </div>\n  );\n};\n\n  function Home() {\n    return <h2>Home</h2>;\n  }\n  \n  function Settings() {\n    return <h2>Settings</h2>;\n  }\n  \n  function Double() {\n    return <h2>Double</h2>;\n  }\n\n  function Feed() {\n      return <h2>Feed</h2>\n  }\n\n  function Moon() {\n    return <h2>Moon</h2>\n}\n\nconst BottomBar = () => (\n  <div className='bottom-bar'>\n    <PlusIcon />\n    <input type='text' placeholder='Enter message...' className='bottom-bar-input' />\n  </div>\n);\n\nconst Post = ({ name, timestamp, text }) => {\n\n  const seed = Math.round(Math.random() * 100);\n  return (\n    <div className={'post'}>\n      <div className='avatar-wrapper'>\n        <img src={`https://avatars.dicebear.com/api/open-peeps/${seed}.svg`} alt='' className='avatar' />\n      </div>\n\n      <div className='post-content'>\n        <p className='post-owner'>\n          {name}\n          <small className='timestamp'>{timestamp}</small>\n        </p>\n        <p className='post-text'>{text}</p>\n      </div>\n    </div>\n  );\n};\n\nconst PlusIcon = () => (\n  <BsPlusCircleFill\n    size='22'\n    className='text-green-500 dark:shadow-lg mx-2 dark:text-primary'\n  />\n);\n\nexport default ContentContainer;","import React, { Component } from \"react\";\nimport { BsPlus, BsFillLightningFill, BsGearFill } from 'react-icons/bs';\nimport { FaFire, FaPoo } from 'react-icons/fa';\nimport { BsCoin } from 'react-icons/bs'\nimport { GiAirplaneDeparture,GiCardAceHearts } from 'react-icons/gi'\nimport { SiApplearcade } from \"react-icons/si\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <nav\n        className=\"nav fixed top-0 left-0 h-screen w-16 m-0\n        flex flex-col bg-gray-900 text-white shadow-lg\n        \"\n      >\n        <Link to = \"/\">\n            <SideBarIcon icon={<BsCoin size=\"28\" />}  text = {\"About\"}/>\n        </Link>\n        <Divider />\n        <Link to = \"/jack\">\n            <SideBarIcon icon={<GiCardAceHearts size=\"32\"/>} text = {\"Black jack\"}/>\n        </Link>\n        <Link to = \"/Slots\">\n            <SideBarIcon icon={<SiApplearcade size=\"20\" />} text = {\"Slots\"}/>\n        </Link>\n        <Link to = \"/feed\">\n            <SideBarIcon icon={<FaPoo size=\"20\" />}  text = {\"Feed\"}/>\n        </Link>\n        <Divider />\n        <Link to = \"/settings\">\n            <SideBarIcon icon={<BsGearFill size=\"22\" />} text = \"settings\"/>\n        </Link>\n      </nav>\n    );\n  }\n}\n\nconst Divider = () => <hr className = \"sidebar-hr\"/>\n\nconst SideBarIcon = ({icon, text = 'tooltip 💡'}) => (\n    <div className=\"sidebar-icon group\">\n    {icon}\n    <span className=\"sidebar-tooltip group-hover:scale-100\">\n      {text}\n    </span>\n  </div>\n);","import React from 'react';\nimport logo from './logo.svg';\nimport Bar from './components/Bar';\nimport ContentContainer from './components/ContentContainer';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport { BrowserRouter } from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <div className=\"App flex\">\n      <BrowserRouter>\n        <NavBar/>\n        <ContentContainer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// dinamicaly create all 52 cards\r\nconst cards = [];  // array that will hold the cards\r\nconst suits = [\"S\", \"H\", \"C\", \"D\"];  // spades, hearts, clubs, diamonds\r\nconst extension = '.svg';\r\n\r\n\r\nclass cardObject {\r\n    value:any;\r\n    symbol:any;\r\n    constructor(value, symbol){\r\n        this.value = value;\r\n        this.symbol = symbol\r\n    }\r\n}\r\n\r\nfor (let i = 1; i <= 14; i++){\r\n    switch(i){\r\n        case 1:{\r\n            const value = 1;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'ace' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n        }\r\n        case 12:{\r\n            const value = 10;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'jack' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n        }\r\n        case 13:{\r\n            const value = 10;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'queen' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;            \r\n        }\r\n        case 14:{\r\n            const value = 10;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'king' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n        }\r\n        case 11:{\r\n            break;\r\n        }\r\n        default:\r\n            const value = i;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = i + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nfunction shuffle(array) { // source : https://bost.ocks.org/mike/shuffle/\r\n    var m = array.length, t, i;\r\n    var arrayCopy = array.slice();\r\n    // While there remain elements to shuffle…\r\n    while (m) {\r\n  \r\n      // Pick a remaining element…\r\n      i = Math.floor(Math.random() * m--);\r\n  \r\n      // And swap it with the current element.\r\n      t = arrayCopy[m];\r\n      arrayCopy[m] = arrayCopy[i];\r\n      arrayCopy[i] = t;\r\n    }\r\n  \r\n    return arrayCopy;\r\n}\r\n\r\nexport {\r\n    cards,\r\n    shuffle\r\n}","const emptyTheTable = () => {\r\n    // clears the table and resets the state, so that the next hand can be played\r\n    return{\r\n        playerCards: [],\r\n        dealerCards: [],\r\n        playerScore: 0,\r\n        dealerScore: 0,\r\n        cardsAreDealt: false,\r\n        playerTurn: true,\r\n        firstMove: true\r\n    }\r\n}\r\n\r\nconst doublePot = (pot, currentMoney) => {\r\n    // winning with blackjack   \r\n    const doubled = pot *2;  // blackjack pays 2 to 1\r\n    const newCurrentMoneyValue = currentMoney + pot + doubled;\r\n\r\n    return {\r\n        pot: 0,\r\n        currentMoney: newCurrentMoneyValue\r\n    }\r\n\r\n}\r\n\r\nconst winBet = (pot, currentMoney) => {\r\n    // winning regular bet\r\n    const newCurrentMoneyValue = currentMoney + pot*2;\r\n\r\n    return {\r\n        pot: 0,\r\n        currentMoney: newCurrentMoneyValue\r\n    }\r\n}\r\n\r\nconst push = (pot, currentMoney) => {\r\n    // draw case\r\n    const newCurrentMoneyValue = currentMoney + pot;\r\n\r\n    return {\r\n        pot: 0,\r\n        currentMoney: newCurrentMoneyValue\r\n    }\r\n\r\n}\r\n\r\nexport{\r\n    emptyTheTable,\r\n    doublePot,\r\n    winBet,\r\n    push\r\n}","import { cards, shuffle } from '../Constants/cardObjects';\r\nimport { DEAL, PLACEBET, CANCELBET, HIT, STAND, DOUBLE, DEALERMOVE, ENDGAME} from '../Constants/ActionTypes';\r\nimport { updateObject, Hit, Double } from './herlperFunctions';\r\nimport { emptyTheTable, doublePot, winBet, push } from './endgameFunctions';\r\n\r\nconst shuffledDeck = shuffle(cards);\r\n\r\nconst initialState = {\r\n    deck: shuffledDeck,\r\n    playerCards: [],\r\n    dealerCards: [],\r\n    currentMoney: 3000,\r\n    pot: 0,\r\n    playerScore: 0,\r\n    dealerScore: 0,\r\n    cardsAreDealt: false,\r\n    playerTurn: true,\r\n    firstMove: true,\r\n    charlieWin: false,\r\n    endGameText: undefined\r\n}\r\n\r\n\r\nconst RootReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case PLACEBET: {\r\n            let {pot, currentMoney} = state;\r\n\r\n            if(action.cash <= currentMoney){\r\n                pot += action.cash;\r\n                currentMoney -= action.cash;\r\n\r\n                let endGameText = undefined;\r\n                return Object.assign({}, state, {pot, currentMoney, endGameText})\r\n            }\r\n            return state\r\n        }\r\n        case CANCELBET: {\r\n            let {pot, currentMoney} = state;\r\n            currentMoney += pot;\r\n            pot = 0;\r\n\r\n            return Object.assign({}, state, {pot, currentMoney})\r\n        }\r\n        case DEAL: {\r\n            let deck = state.deck.slice();\r\n\r\n            if(deck.length < 4){\r\n                deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n            }\r\n            let newValues:any = {\r\n                deck: deck,\r\n                playerCards: [],\r\n                dealerCards: []\r\n            };\r\n\r\n            // Hit two cards for dealer an two cards for player\r\n            for (let i = 0 ; i < 4 ; i++){\r\n                if(i % 2 === 0){\r\n                   newValues = Object.assign({}, newValues, Hit(newValues.deck, newValues.playerCards, 'player'));\r\n                }else{\r\n                    newValues = Object.assign({}, newValues, Hit(newValues.deck, newValues.dealerCards, 'dealer'));\r\n                }\r\n            }\r\n            \r\n            newValues.cardsAreDealt = true;\r\n            newValues.firstMove = true;\r\n\r\n            // if player got 21 (blackjack) on the deal, Stand is automatically played\r\n            if(newValues.playerScore[1] === 21){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n            \r\n            return updateObject(state, newValues);\r\n        }\r\n        case HIT: {\r\n            let deck = state.deck.slice();\r\n            let playerCards = state.playerCards.slice();\r\n            if(deck.length < 2){\r\n                deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n            }\r\n            let newValues:any = Hit(deck, playerCards, 'player');  // draw new card from the deck\r\n\r\n            // if player got 21, switch to dealer turn\r\n            if(newValues.playerScore[1] === 21 || newValues.playerScore === 21){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n            // if player didn't bust and has drawn 5 cards, it is a 'Charlie win'\r\n            else if((newValues.playerScore[1] <= 21 || newValues.playerScore <= 21) && newValues.playerCards.length === 5){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n            // if player got more than 21 , stop drawing cards and switch to dealer for endgame\r\n            else if(newValues.playerScore > 21){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n\r\n            return updateObject(state, newValues);\r\n        }\r\n        case DOUBLE: {\r\n            let {pot, currentMoney} = state;\r\n            let deck = state.deck.slice();\r\n            let playerCards = state.playerCards.slice();\r\n\r\n            if(pot <= currentMoney){\r\n                if(deck.length < 2){\r\n                    deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n                }\r\n                \r\n                let newValues = Double(currentMoney, pot, deck, playerCards);\r\n                \r\n                return updateObject(state, newValues);\r\n                \r\n            }else{\r\n                alert('Not enough cash to double!');\r\n                return state;\r\n            }           \r\n        }\r\n        case STAND: {\r\n            return Object.assign({}, state, {\r\n                playerTurn: false,\r\n                firstMove: false\r\n            })\r\n        }\r\n        case DEALERMOVE: {\r\n            let deck = state.deck.slice();\r\n            let dealerCards = state.dealerCards.slice();\r\n\r\n            if(deck.length < 2){\r\n                deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n            }\r\n\r\n            let newValues = Hit(deck, dealerCards, 'dealer');\r\n            \r\n            return updateObject(state, newValues);\r\n            \r\n        }\r\n        case ENDGAME: {\r\n            // action.comparisonResult.result can be: blackjack | win | push | lose  \r\n            \r\n            const {pot, currentMoney} = state;\r\n\r\n            switch (action.comparisonResult.result){\r\n                case \"blackjack\": {\r\n                    let newValues = doublePot(pot, currentMoney);\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    })\r\n                    return updateObject(state, newValues)\r\n                }\r\n                case \"win\": {\r\n                    let newValues = winBet(pot, currentMoney);\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    });\r\n                    return updateObject(state, newValues)\r\n                }\r\n                case \"lose\": {\r\n                    let newValues = {\r\n                        pot: 0\r\n                    }\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    });\r\n                    return updateObject(state, newValues)\r\n                }\r\n                case \"push\": {\r\n                    let newValues = push(pot, currentMoney);\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    });\r\n                    return updateObject(state, newValues);\r\n                }\r\n                default: {\r\n                    return state;\r\n                }\r\n            }\r\n        \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport RootReducer from './store/Reducers/RootReducer';\n\n\nlet store = createStore(RootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}